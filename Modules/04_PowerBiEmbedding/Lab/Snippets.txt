>> Redirect URL
==================================================
https://powerbiapp.lab.com/gettoken


>> Install packages by using Package Manager Console
==================================================
Install-Package Microsoft.PowerBI.Api
Install-Package Microsoft.PowerBI.JavaScript
Install-Package Microsoft.IdentityModel.Clients.ActiveDirectory


>> Web.config appsettings
==================================================
<appSettings>
	<add key="authorityUrl" value="https://login.windows.net/common/oauth2/authorize/" />
	<add key="resourceUrl" value="https://analysis.windows.net/powerbi/api" />
	<add key="apiUrl" value="https://api.powerbi.com/" />
	<add key="embedUrlBase" value="https://app.powerbi.com/" />
	<add key="clientId" value="" />
	<add key="groupId" value="" />

	<!-- Note: Do NOT leave your credentials on code. Save them in secure place. -->
	<add key="pbiUsername" value="" />
	<add key="pbiPassword" value="" />
</appSettings>


>> Web form: Script element
==================================================
<script src="/scripts/powerbi.js"></script>


>> Web form: Div element
==================================================
<div id="embedDiv" style="height: 600px; width: 100%; max-width: 1000px;"></div>


>> Web form: Namespace directive
==================================================
using System.Configuration;


>> Web form: Class-level declarations
==================================================
private static readonly string AuthorityUrl = ConfigurationManager.AppSettings["authorityUrl"];

private static readonly string ResourceUrl = ConfigurationManager.AppSettings["resourceUrl"];
private static readonly string ApiUrl = ConfigurationManager.AppSettings["apiUrl"];
private static readonly string GroupId = ConfigurationManager.AppSettings["groupId"];
private static readonly string ClientId = ConfigurationManager.AppSettings["clientId"];

private static readonly string Username = ConfigurationManager.AppSettings["pbiUsername"];
private static readonly string Password = ConfigurationManager.AppSettings["pbiPassword"];

public string embedToken;
public string embedUrl;
public string reportId;


>> Web form: Namespace directive
==================================================
using Microsoft.IdentityModel.Clients.ActiveDirectory;
using Microsoft.Rest;


>> Web form: Page_Load: Authenticate with Power BI service
==================================================
var credential = new UserPasswordCredential(Username, Password);

// Authenticate using created credentials
var authenticationContext = new AuthenticationContext(AuthorityUrl);
var authenticationResult = authenticationContext.AcquireTokenAsync(ResourceUrl, ClientId, credential).Result;

var tokenCredentials = new TokenCredentials(authenticationResult.AccessToken, "Bearer");


>> Web form: Namespace directives
==================================================
using Microsoft.PowerBI.Api.V2;
using Microsoft.PowerBI.Api.V2.Models;


>> Web form: Page_Load: Authenticate with Power BI service
==================================================
// Create a Power BI Client object (it will be used to call Power BI APIs)
using (var client = new PowerBIClient(new Uri(ApiUrl), tokenCredentials))
{

	// Get a list of reports
	var reports = client.Reports.GetReportsInGroup(GroupId);

	// Get the first report in the group
	var report = reports.Value.FirstOrDefault();

	// Generate an embed token
	var generateTokenRequestParameters = new GenerateTokenRequest(accessLevel: "view");
	var tokenResponse = client.Reports.GenerateTokenInGroup(GroupId, report.Id, generateTokenRequestParameters);

	embedToken = tokenResponse.Token;
	embedUrl = report.EmbedUrl;
	reportId = report.Id;
}


>> Web form: HTML source: Client-side embed script
==================================================
<script>
	// Read embed token
	var embedToken = "<% =this.embedToken %>";

	// Read embed URL
	var embedUrl = "<% = this.embedUrl %>";

	// Read report Id
	var reportId = "<% = this.reportId %>";

	// Get models (models contains enums that can be used)
	var models = window['powerbi-client'].models;

	// Embed configuration is used to describe what and how to embed
	// This object is used when calling powerbi.embed
	// It can also includes settings and options such as filters
	var config = {
		type: 'report',
		tokenType: models.TokenType.Embed,
		accessToken: embedToken,
		embedUrl: embedUrl,
		id: reportId,
		settings: {
			filterPaneEnabled: true,
			navContentPaneEnabled: true
		}
	};

	// Embed the report and display it within the div
	var report = powerbi.embed(embedDiv, config);
</script>
